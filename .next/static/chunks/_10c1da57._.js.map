{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Users/markus/Developer/Altenheim/Quiz/lib/useTimer.ts"],"sourcesContent":["'use client';\n\nimport { useState, useEffect, useRef, useCallback } from 'react';\n\nexport type TimerState = 'idle' | 'running' | 'paused' | 'completed';\n\ninterface UseTimerOptions {\n  duration: number; // in seconds\n  onComplete?: () => void;\n  onTick?: (remaining: number) => void;\n}\n\ninterface UseTimerReturn {\n  timeRemaining: number;\n  state: TimerState;\n  progress: number; // 0-100\n  start: () => void;\n  pause: () => void;\n  resume: () => void;\n  reset: () => void;\n  stop: () => void;\n}\n\nexport function useTimer({\n  duration,\n  onComplete,\n  onTick,\n}: UseTimerOptions): UseTimerReturn {\n  const [timeRemaining, setTimeRemaining] = useState(duration);\n  const [state, setState] = useState<TimerState>('idle');\n  \n  const startTimeRef = useRef<number | null>(null);\n  const pausedTimeRef = useRef<number>(duration);\n  const animationFrameRef = useRef<number | null>(null);\n  const hasCompletedRef = useRef(false);\n\n  const progress = ((duration - timeRemaining) / duration) * 100;\n\n  const updateTimer = useCallback(() => {\n    if (!startTimeRef.current) return;\n\n    const now = performance.now();\n    const elapsed = (now - startTimeRef.current) / 1000; // Convert to seconds\n    const remaining = Math.max(0, pausedTimeRef.current - elapsed);\n\n    setTimeRemaining(remaining);\n    onTick?.(remaining);\n\n    if (remaining <= 0) {\n      setState('completed');\n      if (!hasCompletedRef.current) {\n        hasCompletedRef.current = true;\n        onComplete?.();\n      }\n      if (animationFrameRef.current) {\n        cancelAnimationFrame(animationFrameRef.current);\n        animationFrameRef.current = null;\n      }\n    } else {\n      animationFrameRef.current = requestAnimationFrame(updateTimer);\n    }\n  }, [onComplete, onTick]);\n\n  const start = useCallback(() => {\n    if (state === 'running') return;\n    \n    hasCompletedRef.current = false;\n    startTimeRef.current = performance.now();\n    pausedTimeRef.current = duration;\n    setState('running');\n    setTimeRemaining(duration);\n    \n    if (animationFrameRef.current) {\n      cancelAnimationFrame(animationFrameRef.current);\n    }\n    animationFrameRef.current = requestAnimationFrame(updateTimer);\n  }, [duration, state, updateTimer]);\n\n  const pause = useCallback(() => {\n    if (state !== 'running') return;\n    \n    setState('paused');\n    pausedTimeRef.current = timeRemaining;\n    \n    if (animationFrameRef.current) {\n      cancelAnimationFrame(animationFrameRef.current);\n      animationFrameRef.current = null;\n    }\n  }, [state, timeRemaining]);\n\n  const resume = useCallback(() => {\n    if (state !== 'paused') return;\n    \n    setState('running');\n    startTimeRef.current = performance.now();\n    \n    if (animationFrameRef.current) {\n      cancelAnimationFrame(animationFrameRef.current);\n    }\n    animationFrameRef.current = requestAnimationFrame(updateTimer);\n  }, [state, updateTimer]);\n\n  const reset = useCallback(() => {\n    hasCompletedRef.current = false;\n    setState('idle');\n    setTimeRemaining(duration);\n    pausedTimeRef.current = duration;\n    startTimeRef.current = null;\n    \n    if (animationFrameRef.current) {\n      cancelAnimationFrame(animationFrameRef.current);\n      animationFrameRef.current = null;\n    }\n  }, [duration]);\n\n  const stop = useCallback(() => {\n    setState('idle');\n    setTimeRemaining(duration);\n    pausedTimeRef.current = duration;\n    startTimeRef.current = null;\n    hasCompletedRef.current = false;\n    \n    if (animationFrameRef.current) {\n      cancelAnimationFrame(animationFrameRef.current);\n      animationFrameRef.current = null;\n    }\n  }, [duration]);\n\n  // Cleanup on unmount\n  useEffect(() => {\n    return () => {\n      if (animationFrameRef.current) {\n        cancelAnimationFrame(animationFrameRef.current);\n      }\n    };\n  }, []);\n\n  return {\n    timeRemaining,\n    state,\n    progress,\n    start,\n    pause,\n    resume,\n    reset,\n    stop,\n  };\n}\n\n"],"names":[],"mappings":";;;;AAEA;;AAFA;;AAuBO,SAAS,SAAS,KAIP;QAJO,EACvB,QAAQ,EACR,UAAU,EACV,MAAM,EACU,GAJO;;IAKvB,MAAM,CAAC,eAAe,iBAAiB,GAAG,IAAA,yKAAQ,EAAC;IACnD,MAAM,CAAC,OAAO,SAAS,GAAG,IAAA,yKAAQ,EAAa;IAE/C,MAAM,eAAe,IAAA,uKAAM,EAAgB;IAC3C,MAAM,gBAAgB,IAAA,uKAAM,EAAS;IACrC,MAAM,oBAAoB,IAAA,uKAAM,EAAgB;IAChD,MAAM,kBAAkB,IAAA,uKAAM,EAAC;IAE/B,MAAM,WAAW,AAAC,CAAC,WAAW,aAAa,IAAI,WAAY;IAE3D,MAAM,cAAc,IAAA,4KAAW;6CAAC;YAC9B,IAAI,CAAC,aAAa,OAAO,EAAE;YAE3B,MAAM,MAAM,YAAY,GAAG;YAC3B,MAAM,UAAU,CAAC,MAAM,aAAa,OAAO,IAAI,MAAM,qBAAqB;YAC1E,MAAM,YAAY,KAAK,GAAG,CAAC,GAAG,cAAc,OAAO,GAAG;YAEtD,iBAAiB;YACjB,mBAAA,6BAAA,OAAS;YAET,IAAI,aAAa,GAAG;gBAClB,SAAS;gBACT,IAAI,CAAC,gBAAgB,OAAO,EAAE;oBAC5B,gBAAgB,OAAO,GAAG;oBAC1B,uBAAA,iCAAA;gBACF;gBACA,IAAI,kBAAkB,OAAO,EAAE;oBAC7B,qBAAqB,kBAAkB,OAAO;oBAC9C,kBAAkB,OAAO,GAAG;gBAC9B;YACF,OAAO;gBACL,kBAAkB,OAAO,GAAG,sBAAsB;YACpD;QACF;4CAAG;QAAC;QAAY;KAAO;IAEvB,MAAM,QAAQ,IAAA,4KAAW;uCAAC;YACxB,IAAI,UAAU,WAAW;YAEzB,gBAAgB,OAAO,GAAG;YAC1B,aAAa,OAAO,GAAG,YAAY,GAAG;YACtC,cAAc,OAAO,GAAG;YACxB,SAAS;YACT,iBAAiB;YAEjB,IAAI,kBAAkB,OAAO,EAAE;gBAC7B,qBAAqB,kBAAkB,OAAO;YAChD;YACA,kBAAkB,OAAO,GAAG,sBAAsB;QACpD;sCAAG;QAAC;QAAU;QAAO;KAAY;IAEjC,MAAM,QAAQ,IAAA,4KAAW;uCAAC;YACxB,IAAI,UAAU,WAAW;YAEzB,SAAS;YACT,cAAc,OAAO,GAAG;YAExB,IAAI,kBAAkB,OAAO,EAAE;gBAC7B,qBAAqB,kBAAkB,OAAO;gBAC9C,kBAAkB,OAAO,GAAG;YAC9B;QACF;sCAAG;QAAC;QAAO;KAAc;IAEzB,MAAM,SAAS,IAAA,4KAAW;wCAAC;YACzB,IAAI,UAAU,UAAU;YAExB,SAAS;YACT,aAAa,OAAO,GAAG,YAAY,GAAG;YAEtC,IAAI,kBAAkB,OAAO,EAAE;gBAC7B,qBAAqB,kBAAkB,OAAO;YAChD;YACA,kBAAkB,OAAO,GAAG,sBAAsB;QACpD;uCAAG;QAAC;QAAO;KAAY;IAEvB,MAAM,QAAQ,IAAA,4KAAW;uCAAC;YACxB,gBAAgB,OAAO,GAAG;YAC1B,SAAS;YACT,iBAAiB;YACjB,cAAc,OAAO,GAAG;YACxB,aAAa,OAAO,GAAG;YAEvB,IAAI,kBAAkB,OAAO,EAAE;gBAC7B,qBAAqB,kBAAkB,OAAO;gBAC9C,kBAAkB,OAAO,GAAG;YAC9B;QACF;sCAAG;QAAC;KAAS;IAEb,MAAM,OAAO,IAAA,4KAAW;sCAAC;YACvB,SAAS;YACT,iBAAiB;YACjB,cAAc,OAAO,GAAG;YACxB,aAAa,OAAO,GAAG;YACvB,gBAAgB,OAAO,GAAG;YAE1B,IAAI,kBAAkB,OAAO,EAAE;gBAC7B,qBAAqB,kBAAkB,OAAO;gBAC9C,kBAAkB,OAAO,GAAG;YAC9B;QACF;qCAAG;QAAC;KAAS;IAEb,qBAAqB;IACrB,IAAA,0KAAS;8BAAC;YACR;sCAAO;oBACL,IAAI,kBAAkB,OAAO,EAAE;wBAC7B,qBAAqB,kBAAkB,OAAO;oBAChD;gBACF;;QACF;6BAAG,EAAE;IAEL,OAAO;QACL;QACA;QACA;QACA;QACA;QACA;QACA;QACA;IACF;AACF;GA5HgB","debugId":null}},
    {"offset": {"line": 155, "column": 0}, "map": {"version":3,"sources":["file:///Users/markus/Developer/Altenheim/Quiz/lib/useSounds.ts"],"sourcesContent":["import { useEffect, useRef } from 'react';\n\nexport function useSounds() {\n  const successSound = useRef<HTMLAudioElement | null>(null);\n  const failureSound = useRef<HTMLAudioElement | null>(null);\n  const introSound = useRef<HTMLAudioElement | null>(null);\n  const initializedRef = useRef(false);\n\n  useEffect(() => {\n    // Initialize audio elements only once\n    if (!successSound.current) {\n      successSound.current = new Audio('/sounds/success.wav');\n      successSound.current.volume = 0.8;\n      successSound.current.load();\n    }\n\n    if (!failureSound.current) {\n      failureSound.current = new Audio('/sounds/failure.mp3');\n      failureSound.current.volume = 0.8;\n      failureSound.current.load();\n    }\n\n    if (!introSound.current) {\n      introSound.current = new Audio('/sounds/intro.wav');\n      introSound.current.volume = 0.6;\n      introSound.current.load();\n    }\n\n    // Enable audio on first user interaction\n    const enableAudio = () => {\n      if (!initializedRef.current) {\n        console.log('üîä Enabling audio...');\n        // Unlock audio by playing and pausing\n        const unlockPromises = [\n          successSound.current?.play().then(() => successSound.current?.pause()),\n          failureSound.current?.play().then(() => failureSound.current?.pause()),\n          introSound.current?.play().then(() => introSound.current?.pause()),\n        ];\n\n        Promise.all(unlockPromises)\n          .then(() => {\n            console.log('‚úÖ Audio unlocked!');\n            initializedRef.current = true;\n          })\n          .catch(err => console.log('Audio unlock failed:', err));\n      }\n    };\n\n    // Listen for any user interaction\n    window.addEventListener('click', enableAudio, { once: true });\n    window.addEventListener('keydown', enableAudio, { once: true });\n    window.addEventListener('touchstart', enableAudio, { once: true });\n\n    return () => {\n      // Cleanup\n      window.removeEventListener('click', enableAudio);\n      window.removeEventListener('keydown', enableAudio);\n      window.removeEventListener('touchstart', enableAudio);\n    };\n  }, []);\n\n  const playSuccess = () => {\n    console.log('üéµ Playing success sound...');\n    if (successSound.current) {\n      successSound.current.currentTime = 0;\n      successSound.current.play()\n        .then(() => console.log('‚úÖ Success sound played'))\n        .catch(err => console.error('‚ùå Success sound failed:', err));\n    }\n  };\n\n  const playFailure = () => {\n    console.log('üéµ Playing failure sound...');\n    if (failureSound.current) {\n      failureSound.current.currentTime = 0;\n      failureSound.current.play()\n        .then(() => console.log('‚úÖ Failure sound played'))\n        .catch(err => console.error('‚ùå Failure sound failed:', err));\n    }\n  };\n\n  const playIntro = () => {\n    console.log('üéµ Playing intro sound...');\n    if (introSound.current) {\n      introSound.current.currentTime = 0;\n      introSound.current.play()\n        .then(() => console.log('‚úÖ Intro sound played'))\n        .catch(err => console.error('‚ùå Intro sound failed:', err));\n    }\n  };\n\n  return {\n    playSuccess,\n    playFailure,\n    playIntro,\n  };\n}\n\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 279, "column": 0}, "map": {"version":3,"sources":["file:///Users/markus/Developer/Altenheim/Quiz/components/TeamScoring.tsx"],"sourcesContent":["'use client';\n\nimport { useState } from 'react';\n\ninterface TeamScoringProps {\n  onScoreUpdate?: (teamA: number, teamB: number) => void;\n}\n\nexport function TeamScoring({ onScoreUpdate }: TeamScoringProps) {\n  const [teamAScore, setTeamAScore] = useState(0);\n  const [teamBScore, setTeamBScore] = useState(0);\n  const [teamAName, setTeamAName] = useState('Team A');\n  const [teamBName, setTeamBName] = useState('Team B');\n  const [isEditing, setIsEditing] = useState(false);\n\n  const incrementTeamA = () => {\n    const newScore = teamAScore + 1;\n    setTeamAScore(newScore);\n    onScoreUpdate?.(newScore, teamBScore);\n  };\n\n  const incrementTeamB = () => {\n    const newScore = teamBScore + 1;\n    setTeamBScore(newScore);\n    onScoreUpdate?.(teamAScore, newScore);\n  };\n\n  const decrementTeamA = () => {\n    const newScore = Math.max(0, teamAScore - 1);\n    setTeamAScore(newScore);\n    onScoreUpdate?.(newScore, teamBScore);\n  };\n\n  const decrementTeamB = () => {\n    const newScore = Math.max(0, teamBScore - 1);\n    setTeamBScore(newScore);\n    onScoreUpdate?.(teamAScore, newScore);\n  };\n\n  const reset = () => {\n    setTeamAScore(0);\n    setTeamBScore(0);\n    onScoreUpdate?.(0, 0);\n  };\n\n  return (\n    <div className=\"bg-gray-800 rounded-lg p-3 shadow-lg\">\n      <div className=\"flex justify-between items-center mb-2\">\n        <div className=\"text-xs text-white/50\">Teams</div>\n        <button\n          onClick={() => setIsEditing(!isEditing)}\n          className=\"text-xs text-white/50 hover:text-white\"\n        >\n          {isEditing ? '‚úì' : '‚úèÔ∏è'}\n        </button>\n      </div>\n\n      <div className=\"grid grid-cols-2 gap-2 mb-2\">\n        {/* Team A */}\n        <div className=\"bg-blue-500/20 rounded-lg p-2 text-center\">\n          {isEditing ? (\n            <input\n              type=\"text\"\n              value={teamAName}\n              onChange={(e) => setTeamAName(e.target.value)}\n              className=\"w-full bg-gray-700 text-white text-center rounded px-1 py-0.5 mb-1 text-xs\"\n            />\n          ) : (\n            <div className=\"text-xs font-semibold text-blue-300 mb-1\">{teamAName}</div>\n          )}\n          <div className=\"text-3xl font-bold text-white mb-1\">{teamAScore}</div>\n          <div className=\"flex gap-1\">\n            <button\n              onClick={decrementTeamA}\n              className=\"flex-1 py-1 bg-red-500/50 hover:bg-red-500 rounded text-white text-xs font-bold\"\n            >\n              -\n            </button>\n            <button\n              onClick={incrementTeamA}\n              className=\"flex-1 py-1 bg-green-500/50 hover:bg-green-500 rounded text-white text-xs font-bold\"\n            >\n              +\n            </button>\n          </div>\n        </div>\n\n        {/* Team B */}\n        <div className=\"bg-yellow-500/20 rounded-lg p-2 text-center\">\n          {isEditing ? (\n            <input\n              type=\"text\"\n              value={teamBName}\n              onChange={(e) => setTeamBName(e.target.value)}\n              className=\"w-full bg-gray-700 text-white text-center rounded px-1 py-0.5 mb-1 text-xs\"\n            />\n          ) : (\n            <div className=\"text-xs font-semibold text-yellow-300 mb-1\">{teamBName}</div>\n          )}\n          <div className=\"text-3xl font-bold text-white mb-1\">{teamBScore}</div>\n          <div className=\"flex gap-1\">\n            <button\n              onClick={decrementTeamB}\n              className=\"flex-1 py-1 bg-red-500/50 hover:bg-red-500 rounded text-white text-xs font-bold\"\n            >\n              -\n            </button>\n            <button\n              onClick={incrementTeamB}\n              className=\"flex-1 py-1 bg-green-500/50 hover:bg-green-500 rounded text-white text-xs font-bold\"\n            >\n              +\n            </button>\n          </div>\n        </div>\n      </div>\n\n      <button\n        onClick={reset}\n        className=\"w-full py-1 bg-gray-700 hover:bg-gray-600 text-white rounded text-xs\"\n      >\n        üîÑ Reset\n      </button>\n    </div>\n  );\n}\n\n"],"names":[],"mappings":";;;;;AAEA;;;AAFA;;AAQO,SAAS,YAAY,KAAmC;QAAnC,EAAE,aAAa,EAAoB,GAAnC;;IAC1B,MAAM,CAAC,YAAY,cAAc,GAAG,IAAA,yKAAQ,EAAC;IAC7C,MAAM,CAAC,YAAY,cAAc,GAAG,IAAA,yKAAQ,EAAC;IAC7C,MAAM,CAAC,WAAW,aAAa,GAAG,IAAA,yKAAQ,EAAC;IAC3C,MAAM,CAAC,WAAW,aAAa,GAAG,IAAA,yKAAQ,EAAC;IAC3C,MAAM,CAAC,WAAW,aAAa,GAAG,IAAA,yKAAQ,EAAC;IAE3C,MAAM,iBAAiB;QACrB,MAAM,WAAW,aAAa;QAC9B,cAAc;QACd,0BAAA,oCAAA,cAAgB,UAAU;IAC5B;IAEA,MAAM,iBAAiB;QACrB,MAAM,WAAW,aAAa;QAC9B,cAAc;QACd,0BAAA,oCAAA,cAAgB,YAAY;IAC9B;IAEA,MAAM,iBAAiB;QACrB,MAAM,WAAW,KAAK,GAAG,CAAC,GAAG,aAAa;QAC1C,cAAc;QACd,0BAAA,oCAAA,cAAgB,UAAU;IAC5B;IAEA,MAAM,iBAAiB;QACrB,MAAM,WAAW,KAAK,GAAG,CAAC,GAAG,aAAa;QAC1C,cAAc;QACd,0BAAA,oCAAA,cAAgB,YAAY;IAC9B;IAEA,MAAM,QAAQ;QACZ,cAAc;QACd,cAAc;QACd,0BAAA,oCAAA,cAAgB,GAAG;IACrB;IAEA,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAI,WAAU;kCAAwB;;;;;;kCACvC,6LAAC;wBACC,SAAS,IAAM,aAAa,CAAC;wBAC7B,WAAU;kCAET,YAAY,MAAM;;;;;;;;;;;;0BAIvB,6LAAC;gBAAI,WAAU;;kCAEb,6LAAC;wBAAI,WAAU;;4BACZ,0BACC,6LAAC;gCACC,MAAK;gCACL,OAAO;gCACP,UAAU,CAAC,IAAM,aAAa,EAAE,MAAM,CAAC,KAAK;gCAC5C,WAAU;;;;;qDAGZ,6LAAC;gCAAI,WAAU;0CAA4C;;;;;;0CAE7D,6LAAC;gCAAI,WAAU;0CAAsC;;;;;;0CACrD,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;wCACC,SAAS;wCACT,WAAU;kDACX;;;;;;kDAGD,6LAAC;wCACC,SAAS;wCACT,WAAU;kDACX;;;;;;;;;;;;;;;;;;kCAOL,6LAAC;wBAAI,WAAU;;4BACZ,0BACC,6LAAC;gCACC,MAAK;gCACL,OAAO;gCACP,UAAU,CAAC,IAAM,aAAa,EAAE,MAAM,CAAC,KAAK;gCAC5C,WAAU;;;;;qDAGZ,6LAAC;gCAAI,WAAU;0CAA8C;;;;;;0CAE/D,6LAAC;gCAAI,WAAU;0CAAsC;;;;;;0CACrD,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;wCACC,SAAS;wCACT,WAAU;kDACX;;;;;;kDAGD,6LAAC;wCACC,SAAS;wCACT,WAAU;kDACX;;;;;;;;;;;;;;;;;;;;;;;;0BAOP,6LAAC;gBACC,SAAS;gBACT,WAAU;0BACX;;;;;;;;;;;;AAKP;GArHgB;KAAA","debugId":null}},
    {"offset": {"line": 509, "column": 0}, "map": {"version":3,"sources":["file:///Users/markus/Developer/Altenheim/Quiz/app/presenter/quiz/page.tsx"],"sourcesContent":["'use client';\n\nimport { useEffect, useState, useCallback } from 'react';\nimport { useTimer } from '@/lib/useTimer';\nimport { useSounds } from '@/lib/useSounds';\nimport { TeamScoring } from '@/components/TeamScoring';\nimport {\n  Gamepad2,\n  Play,\n  Pause,\n  RotateCcw,\n  ArrowRight,\n  ArrowLeft,\n  Lightbulb,\n  Timer,\n  Bot,\n  CheckCircle2,\n  XCircle,\n  Clock\n} from 'lucide-react';\n\ninterface QuizQuestion {\n  id: string;\n  prompt: string;\n  choices: string[];\n  answerIndex: number;\n  fact: string | null;\n  tags: string[];\n  difficulty: string;\n}\n\nexport default function PresenterQuizPage() {\n  const [questions, setQuestions] = useState<QuizQuestion[]>([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [selectedIndex, setSelectedIndex] = useState<number | null>(null);\n  const [correctIndex, setCorrectIndex] = useState<number | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [timerDuration, setTimerDuration] = useState(30);\n  const [teamAScore, setTeamAScore] = useState(0);\n  const [teamBScore, setTeamBScore] = useState(0);\n  const [showTeamScoring, setShowTeamScoring] = useState(false);\n  const [teamAName, setTeamAName] = useState('Team A');\n  const [teamBName, setTeamBName] = useState('Team B');\n  const [autopilotEnabled, setAutopilotEnabled] = useState(false);\n  const [isWaitingAfterReveal, setIsWaitingAfterReveal] = useState(false);\n\n  const { playSuccess, playFailure, playIntro } = useSounds();\n\n  const timer = useTimer({\n    duration: timerDuration,\n    onComplete: () => {\n      // Auto-reveal on timeout\n      if (correctIndex === null && !isWaitingAfterReveal) {\n        handleReveal();\n\n        // If autopilot is enabled, wait 7 seconds then go to next question\n        if (autopilotEnabled) {\n          setIsWaitingAfterReveal(true);\n          setTimeout(() => {\n            setIsWaitingAfterReveal(false);\n            handleNextQuestion();\n          }, 7000);\n        }\n      }\n    },\n  });\n\n  // Load questions\n  useEffect(() => {\n    async function loadQuestions() {\n      try {\n        const response = await fetch('/api/quiz?limit=200');\n        const data = await response.json();\n        if (data.success) {\n          // Use session-based seed for consistent shuffle across presenter and TV\n          let seed = sessionStorage.getItem('quizSeed');\n          if (!seed) {\n            seed = Date.now().toString();\n            sessionStorage.setItem('quizSeed', seed);\n          }\n\n          // Seeded shuffle\n          const shuffled = [...data.data].sort((a, b) => {\n            const hash = (str: string) => {\n              let h = 0;\n              for (let i = 0; i < str.length; i++) {\n                h = ((h << 5) - h) + str.charCodeAt(i);\n                h = h & h;\n              }\n              return h;\n            };\n            return hash(seed + a.id) - hash(seed + b.id);\n          });\n\n          setQuestions(shuffled);\n\n          // Load automode setting from localStorage\n          const savedAutomode = localStorage.getItem('automodeEnabled');\n          if (savedAutomode === 'true') {\n            setAutopilotEnabled(true);\n          }\n        }\n      } catch (error) {\n        console.error('Failed to load questions:', error);\n      } finally {\n        setLoading(false);\n      }\n    }\n    loadQuestions();\n  }, []);\n\n\n\n  // Broadcast state to screen view\n  useEffect(() => {\n    const channel = new BroadcastChannel('quiz-sync');\n    channel.postMessage({\n      currentQuestionIndex,\n      selectedIndex,\n      correctIndex,\n      timerState: timer.state,\n      timeRemaining: timer.timeRemaining,\n      progress: timer.progress,\n      teamAScore,\n      teamBScore,\n      teamAName,\n      teamBName,\n    });\n    return () => channel.close();\n  }, [currentQuestionIndex, selectedIndex, correctIndex, timer.state, timer.timeRemaining, timer.progress, teamAScore, teamBScore, teamAName, teamBName]);\n\n  const handleReveal = useCallback(() => {\n    if (correctIndex !== null) return; // Already revealed\n    const current = questions[currentQuestionIndex];\n    if (!current) return;\n\n    setCorrectIndex(current.answerIndex);\n    timer.pause();\n\n    // Play sound based on whether answer was correct\n    if (selectedIndex === current.answerIndex) {\n      playSuccess();\n    } else if (selectedIndex !== null) {\n      playFailure();\n    } else if (autopilotEnabled) {\n      // In autopilot mode without selection, play success\n      playSuccess();\n    }\n  }, [correctIndex, questions, currentQuestionIndex, timer, selectedIndex, autopilotEnabled, playSuccess, playFailure]);\n\n  const handleSelectAnswer = useCallback((index: number) => {\n    if (correctIndex !== null) return; // Already revealed\n    \n    setSelectedIndex(index);\n    handleReveal();\n  }, [correctIndex, handleReveal]);\n\n  const handleNextQuestion = useCallback(() => {\n    if (currentQuestionIndex < questions.length - 1 && !isWaitingAfterReveal) {\n      setCurrentQuestionIndex(prev => prev + 1);\n      setSelectedIndex(null);\n      setCorrectIndex(null);\n      setIsWaitingAfterReveal(false);\n      timer.reset();\n    }\n  }, [currentQuestionIndex, questions.length, timer, isWaitingAfterReveal]);\n\n  // Auto-start timer when autopilot is enabled (only once per question)\n  useEffect(() => {\n    if (autopilotEnabled && timer.state === 'idle' && !loading && !isWaitingAfterReveal && correctIndex === null) {\n      const timeoutId = setTimeout(() => {\n        timer.start();\n      }, 800);\n      return () => clearTimeout(timeoutId);\n    }\n  }, [autopilotEnabled, timer.state, loading, currentQuestionIndex, isWaitingAfterReveal, correctIndex]);\n\n  const handlePrevQuestion = useCallback(() => {\n    if (currentQuestionIndex > 0) {\n      setCurrentQuestionIndex(prev => prev - 1);\n      setSelectedIndex(null);\n      setCorrectIndex(null);\n      timer.reset();\n    }\n  }, [currentQuestionIndex, timer]);\n\n  const toggleTimerDuration = useCallback(() => {\n    setTimerDuration(prev => prev === 30 ? 45 : 30);\n    timer.reset();\n  }, [timer]);\n\n  // Keyboard shortcuts\n  useEffect(() => {\n    const handleKeyDown = (e: KeyboardEvent) => {\n      // Prevent default for our shortcuts\n      const key = e.key.toLowerCase();\n      \n      if (['a', 'b', 'c', 'd', ' ', 'enter', 'r', 's', 'arrowleft', 'backspace'].includes(key)) {\n        e.preventDefault();\n      }\n\n      switch (key) {\n        case 'a':\n          handleSelectAnswer(0);\n          break;\n        case 'b':\n          handleSelectAnswer(1);\n          break;\n        case 'c':\n          handleSelectAnswer(2);\n          break;\n        case 'd':\n          if (questions[currentQuestionIndex]?.choices.length > 3) {\n            handleSelectAnswer(3);\n          }\n          break;\n        case ' ': // Space\n          if (timer.state === 'running') {\n            timer.pause();\n          } else if (timer.state === 'paused') {\n            timer.resume();\n          } else {\n            timer.start();\n          }\n          break;\n        case 'enter':\n          handleNextQuestion();\n          break;\n        case 'arrowleft':\n        case 'backspace':\n          handlePrevQuestion();\n          break;\n        case 'r':\n          timer.reset();\n          timer.start();\n          break;\n        case 's':\n          handleReveal();\n          break;\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n    return () => window.removeEventListener('keydown', handleKeyDown);\n  }, [handleSelectAnswer, handleNextQuestion, handlePrevQuestion, handleReveal, timer, questions, currentQuestionIndex]);\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center bg-quiz-bg\">\n        <div className=\"text-4xl font-bold text-quiz-text animate-pulse\">\n          L√§dt Quiz...\n        </div>\n      </div>\n    );\n  }\n\n  if (questions.length === 0) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center bg-quiz-bg\">\n        <div className=\"text-center\">\n          <div className=\"text-4xl font-bold text-quiz-wrong mb-4\">\n            Keine Fragen gefunden\n          </div>\n          <div className=\"text-xl text-quiz-text/70\">\n            Bitte f√ºhren Sie <code className=\"bg-quiz-text/10 px-3 py-1 rounded\">npm run db:seed</code> aus\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  const currentQuestion = questions[currentQuestionIndex];\n  if (!currentQuestion) return null;\n\n  return (\n    <main className=\"min-h-screen bg-gradient-to-br from-gray-900 to-gray-800 p-4\">\n      {/* Compact Header */}\n      <div className=\"bg-gray-800 rounded-lg p-3 mb-4 shadow-lg\">\n        <div className=\"flex justify-between items-center\">\n          <h1 className=\"text-xl font-bold text-white flex items-center gap-2\">\n            <Gamepad2 className=\"w-5 h-5\" />\n            Presenter\n          </h1>\n          <div className=\"text-white/70 text-sm\">\n            {currentQuestionIndex + 1} / {questions.length}\n          </div>\n        </div>\n      </div>\n\n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-4\">\n        {/* Main Content - Left Side */}\n        <div className=\"lg:col-span-2 space-y-3\">\n          {/* Question Preview - Compact */}\n          <div className=\"bg-gray-800 rounded-lg p-4 shadow-lg\">\n            <div className=\"text-lg font-bold text-white mb-2\">\n              {currentQuestion.prompt}\n            </div>\n            <div className=\"flex gap-1 flex-wrap\">\n              {currentQuestion.tags.slice(0, 2).map((tag, i) => (\n                <span key={i} className=\"px-2 py-0.5 bg-blue-500/20 text-blue-300 rounded text-xs\">\n                  {tag}\n                </span>\n              ))}\n              <span className={`px-2 py-0.5 rounded text-xs ${\n                currentQuestion.difficulty === 'EASY' ? 'bg-green-500/20 text-green-300' :\n                currentQuestion.difficulty === 'MEDIUM' ? 'bg-yellow-500/20 text-yellow-300' :\n                'bg-red-500/20 text-red-300'\n              }`}>\n                {currentQuestion.difficulty}\n              </span>\n            </div>\n          </div>\n\n          {/* Choices Preview - Compact */}\n          <div className=\"bg-gray-800 rounded-lg p-3 shadow-lg\">\n            <div className=\"grid grid-cols-2 gap-2\">\n              {currentQuestion.choices.map((choice, index) => {\n                const letter = String.fromCharCode(65 + index);\n                const isSelected = selectedIndex === index;\n                const isCorrect = correctIndex === index;\n                const isWrong = correctIndex !== null && selectedIndex === index && !isCorrect;\n\n                return (\n                  <button\n                    key={index}\n                    onClick={() => handleSelectAnswer(index)}\n                    disabled={correctIndex !== null}\n                    className={`p-2 rounded-lg text-left transition-all text-sm ${\n                      isCorrect ? 'bg-green-500 text-white font-bold' :\n                      isWrong ? 'bg-red-500 text-white' :\n                      isSelected ? 'bg-yellow-500 text-gray-900 font-bold' :\n                      'bg-gray-700 text-white hover:bg-gray-600'\n                    } ${correctIndex !== null ? 'cursor-not-allowed' : 'cursor-pointer'}`}\n                  >\n                    <span className=\"font-bold\">{letter}:</span> {choice}\n                  </button>\n                );\n              })}\n            </div>\n          </div>\n\n          {/* Fun Fact - Compact */}\n          {correctIndex !== null && currentQuestion.fact && (\n            <div className=\"bg-blue-500/20 border border-blue-500 rounded-lg p-3 shadow-lg animate-in fade-in\">\n              <div className=\"text-xs text-blue-300 mb-1\">üí° Wussten Sie:</div>\n              <div className=\"text-sm text-white\">{currentQuestion.fact}</div>\n            </div>\n          )}\n\n          {/* Quick Controls under Question */}\n          <div className=\"grid grid-cols-3 gap-2\">\n            {/* Navigation */}\n            <button\n              onClick={handlePrevQuestion}\n              disabled={currentQuestionIndex === 0}\n              className=\"py-2 bg-gray-700 hover:bg-gray-600 disabled:opacity-50 disabled:cursor-not-allowed text-white rounded-lg text-xs font-semibold flex items-center justify-center gap-1\"\n            >\n              <ArrowLeft className=\"w-3 h-3\" />\n              Zur√ºck\n            </button>\n\n            <button\n              onClick={handleReveal}\n              disabled={correctIndex !== null}\n              className=\"py-2 bg-yellow-500 hover:bg-yellow-600 disabled:opacity-50 disabled:cursor-not-allowed text-gray-900 rounded-lg text-xs font-semibold flex items-center justify-center gap-1\"\n            >\n              <Lightbulb className=\"w-3 h-3\" />\n              L√∂sung\n            </button>\n\n            <button\n              onClick={handleNextQuestion}\n              disabled={currentQuestionIndex === questions.length - 1}\n              className=\"py-2 bg-green-500 hover:bg-green-600 disabled:opacity-50 disabled:cursor-not-allowed text-white rounded-lg text-xs font-semibold flex items-center justify-center gap-1\"\n            >\n              Weiter\n              <ArrowRight className=\"w-3 h-3\" />\n            </button>\n          </div>\n\n          {/* Team Scoring Toggle & Display */}\n          <div className=\"bg-gray-800 rounded-lg p-3 shadow-lg\">\n            <div className=\"flex items-center justify-between mb-2\">\n              <div className=\"text-xs text-white/50\">Team-Modus</div>\n              <button\n                onClick={() => setShowTeamScoring(!showTeamScoring)}\n                className={`px-3 py-1 rounded-lg text-xs font-semibold transition-all ${\n                  showTeamScoring\n                    ? 'bg-blue-500 hover:bg-blue-600 text-white'\n                    : 'bg-gray-700 hover:bg-gray-600 text-white'\n                }`}\n              >\n                {showTeamScoring ? 'AN' : 'AUS'}\n              </button>\n            </div>\n\n            {showTeamScoring && (\n              <TeamScoring\n                onScoreUpdate={(scoreA, scoreB) => {\n                  setTeamAScore(scoreA);\n                  setTeamBScore(scoreB);\n                }}\n              />\n            )}\n          </div>\n\n          {/* Keyboard Shortcuts */}\n          <div className=\"bg-gray-800 rounded-lg p-3 shadow-lg\">\n            <div className=\"text-xs text-white/50 mb-2\">Tastenk√ºrzel</div>\n            <div className=\"grid grid-cols-3 gap-1 text-xs text-white/70\">\n              <div><kbd className=\"bg-gray-700 px-1 py-0.5 rounded text-xs\">A-D</kbd> Antwort</div>\n              <div><kbd className=\"bg-gray-700 px-1 py-0.5 rounded text-xs\">Space</kbd> Timer</div>\n              <div><kbd className=\"bg-gray-700 px-1 py-0.5 rounded text-xs\">Enter</kbd> Weiter</div>\n              <div><kbd className=\"bg-gray-700 px-1 py-0.5 rounded text-xs\">‚Üê</kbd> Zur√ºck</div>\n              <div><kbd className=\"bg-gray-700 px-1 py-0.5 rounded text-xs\">R</kbd> Reset</div>\n              <div><kbd className=\"bg-gray-700 px-1 py-0.5 rounded text-xs\">S</kbd> L√∂sung</div>\n            </div>\n          </div>\n        </div>\n\n        {/* Sidebar Controls - Compact */}\n        <div className=\"space-y-3\">\n          {/* Autopilot Mode - Compact */}\n          <div className=\"bg-gradient-to-br from-purple-900/50 to-pink-900/50 rounded-lg p-3 shadow-lg border border-purple-500/30\">\n            <div className=\"flex items-center justify-between mb-2\">\n              <div className=\"text-xs text-white/70 flex items-center gap-1\">\n                <Bot className=\"w-4 h-4\" />\n                Autopilot\n              </div>\n              <button\n                onClick={() => {\n                  setAutopilotEnabled(!autopilotEnabled);\n                  if (!autopilotEnabled && timer.state === 'idle') {\n                    timer.start();\n                  }\n                }}\n                className={`px-3 py-1 rounded-lg text-sm font-semibold transition-all flex items-center gap-1 ${\n                  autopilotEnabled\n                    ? 'bg-green-500 hover:bg-green-600 text-white shadow-glow-green'\n                    : 'bg-gray-700 hover:bg-gray-600 text-white'\n                }`}\n              >\n                {autopilotEnabled ? (\n                  <>\n                    <CheckCircle2 className=\"w-3 h-3\" />\n                    AN\n                  </>\n                ) : (\n                  <>\n                    <XCircle className=\"w-3 h-3\" />\n                    AUS\n                  </>\n                )}\n              </button>\n            </div>\n            {autopilotEnabled && isWaitingAfterReveal && (\n              <div className=\"text-xs text-yellow-400 animate-pulse flex items-center gap-1\">\n                <Clock className=\"w-3 h-3\" />\n                Warte 7s...\n              </div>\n            )}\n          </div>\n\n          {/* Timer Controls - Compact */}\n          <div className=\"bg-gray-800 rounded-lg p-3 shadow-lg\">\n            <div className=\"text-xs text-white/50 mb-2 flex items-center gap-1\">\n              <Timer className=\"w-3 h-3\" />\n              Timer\n            </div>\n            <div className=\"text-center mb-3\">\n              <div className={`text-4xl font-bold ${\n                timer.state === 'completed' ? 'text-red-500' :\n                timer.timeRemaining <= 10 && timer.state === 'running' ? 'text-yellow-500 animate-pulse' :\n                'text-white'\n              }`}>\n                {Math.ceil(timer.timeRemaining)}s\n              </div>\n              <div className=\"text-xs text-white/50 mt-1\">\n                {timer.state === 'idle' && 'Bereit'}\n                {timer.state === 'running' && 'L√§uft'}\n                {timer.state === 'paused' && 'Pausiert'}\n                {timer.state === 'completed' && 'Abgelaufen'}\n              </div>\n            </div>\n\n            <div className=\"space-y-1\">\n              <button\n                onClick={() => timer.state === 'running' ? timer.pause() : timer.state === 'paused' ? timer.resume() : timer.start()}\n                className=\"w-full py-2 bg-blue-500 hover:bg-blue-600 text-white rounded-lg text-sm font-semibold flex items-center justify-center gap-1\"\n                disabled={autopilotEnabled}\n              >\n                {timer.state === 'running' ? (\n                  <>\n                    <Pause className=\"w-4 h-4\" />\n                    Pause\n                  </>\n                ) : (\n                  <>\n                    <Play className=\"w-4 h-4\" />\n                    Start\n                  </>\n                )}\n              </button>\n              <div className=\"grid grid-cols-2 gap-1\">\n                <button\n                  onClick={() => { timer.reset(); timer.start(); }}\n                  className=\"py-2 bg-gray-700 hover:bg-gray-600 text-white rounded-lg text-xs font-semibold flex items-center justify-center gap-1\"\n                >\n                  <RotateCcw className=\"w-3 h-3\" />\n                  Reset\n                </button>\n                <button\n                  onClick={toggleTimerDuration}\n                  className=\"py-2 bg-gray-700 hover:bg-gray-600 text-white rounded-lg text-xs flex items-center justify-center gap-1\"\n                >\n                  <Clock className=\"w-3 h-3\" />\n                  {timerDuration}s\n                </button>\n              </div>\n            </div>\n          </div>\n\n          {/* Navigation - Compact */}\n          <div className=\"bg-gray-800 rounded-lg p-3 shadow-lg\">\n            <div className=\"space-y-1\">\n              <div className=\"grid grid-cols-2 gap-1\">\n                <button\n                  onClick={handlePrevQuestion}\n                  disabled={currentQuestionIndex === 0}\n                  className=\"py-2 bg-gray-700 hover:bg-gray-600 disabled:opacity-50 disabled:cursor-not-allowed text-white rounded-lg text-xs font-semibold flex items-center justify-center gap-1\"\n                >\n                  <ArrowLeft className=\"w-3 h-3\" />\n                  Zur√ºck\n                </button>\n                <button\n                  onClick={handleNextQuestion}\n                  disabled={currentQuestionIndex === questions.length - 1}\n                  className=\"py-2 bg-green-500 hover:bg-green-600 disabled:opacity-50 disabled:cursor-not-allowed text-white rounded-lg text-xs font-semibold flex items-center justify-center gap-1\"\n                >\n                  Weiter\n                  <ArrowRight className=\"w-3 h-3\" />\n                </button>\n              </div>\n              <button\n                onClick={handleReveal}\n                disabled={correctIndex !== null}\n                className=\"w-full py-2 bg-yellow-500 hover:bg-yellow-600 disabled:opacity-50 disabled:cursor-not-allowed text-gray-900 rounded-lg text-sm font-semibold flex items-center justify-center gap-1\"\n              >\n                <Lightbulb className=\"w-4 h-4\" />\n                L√∂sung (S)\n              </button>\n            </div>\n          </div>\n\n          {/* Team Scoring */}\n          <TeamScoring\n            onScoreUpdate={(scoreA, scoreB) => {\n              setTeamAScore(scoreA);\n              setTeamBScore(scoreB);\n            }}\n          />\n\n          {/* Keyboard Shortcuts - Compact */}\n          <div className=\"bg-gray-800 rounded-lg p-3 shadow-lg\">\n            <div className=\"text-xs text-white/50 mb-2\">Tastenk√ºrzel</div>\n            <div className=\"grid grid-cols-2 gap-1 text-xs text-white/70\">\n              <div><kbd className=\"bg-gray-700 px-1 py-0.5 rounded text-xs\">A-D</kbd> Antwort</div>\n              <div><kbd className=\"bg-gray-700 px-1 py-0.5 rounded text-xs\">Space</kbd> Timer</div>\n              <div><kbd className=\"bg-gray-700 px-1 py-0.5 rounded text-xs\">Enter</kbd> Weiter</div>\n              <div><kbd className=\"bg-gray-700 px-1 py-0.5 rounded text-xs\">‚Üê</kbd> Zur√ºck</div>\n              <div><kbd className=\"bg-gray-700 px-1 py-0.5 rounded text-xs\">R</kbd> Reset</div>\n              <div><kbd className=\"bg-gray-700 px-1 py-0.5 rounded text-xs\">S</kbd> L√∂sung</div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </main>\n  );\n}\n\n"],"names":[],"mappings":"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","debugId":null}}]
}